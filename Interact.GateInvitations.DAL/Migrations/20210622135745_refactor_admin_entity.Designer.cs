// <auto-generated />
using System;
using Interact.GateInvitations.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Interact.GateInvitations.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210622135745_refactor_admin_entity")]
    partial class refactor_admin_entity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.Property<string>("VillaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvitedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.InviteeLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HandlerSecurityKeeperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LoginStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("RelatedInviterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HandlerSecurityKeeperId");

                    b.HasIndex("RelatedInviterId");

                    b.ToTable("InviteeLogins");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.SecurityKeeper", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SecurityKeepers");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.Admin", b =>
                {
                    b.HasOne("Interact.GateInvitations.Core.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.Customer", b =>
                {
                    b.HasOne("Interact.GateInvitations.Core.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.Invitation", b =>
                {
                    b.HasOne("Interact.GateInvitations.Core.Data.Customer", "Customer")
                        .WithMany("Invitations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.InviteeLogin", b =>
                {
                    b.HasOne("Interact.GateInvitations.Core.Data.SecurityKeeper", "HandlerSecurityKeeper")
                        .WithMany()
                        .HasForeignKey("HandlerSecurityKeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Interact.GateInvitations.Core.Data.Customer", "RelatedInviter")
                        .WithMany()
                        .HasForeignKey("RelatedInviterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HandlerSecurityKeeper");

                    b.Navigation("RelatedInviter");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.SecurityKeeper", b =>
                {
                    b.HasOne("Interact.GateInvitations.Core.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Interact.GateInvitations.Core.Data.Customer", b =>
                {
                    b.Navigation("Invitations");
                });
#pragma warning restore 612, 618
        }
    }
}
